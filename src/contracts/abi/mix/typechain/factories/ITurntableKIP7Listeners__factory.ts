/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  ITurntableKIP7Listeners,
  ITurntableKIP7ListenersInterface,
} from "../ITurntableKIP7Listeners";

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "turntableId",
        type: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
      },
    ],
    name: "listen",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "turntableIds",
        type: "uint256[]",
      },
    ],
    name: "claim",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "turntableId",
        type: "uint256",
      },
      {
        name: "owner",
        type: "address",
      },
    ],
    name: "shares",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "turntableId",
        type: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unlisten",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "turntableId",
        type: "uint256",
      },
      {
        name: "owner",
        type: "address",
      },
    ],
    name: "claimableOf",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "turntableId",
        type: "uint256",
      },
      {
        name: "owner",
        type: "address",
      },
    ],
    name: "accumulativeOf",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "turntableFee",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "turntableId",
        type: "uint256",
      },
      {
        name: "owner",
        type: "address",
      },
    ],
    name: "claimedOf",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "by",
        type: "address",
      },
      {
        indexed: false,
        name: "distributed",
        type: "uint256",
      },
    ],
    name: "Distribute",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "turntableId",
        type: "uint256",
      },
      {
        indexed: true,
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        name: "claimed",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "turntableId",
        type: "uint256",
      },
      {
        indexed: true,
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Listen",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "turntableId",
        type: "uint256",
      },
      {
        indexed: true,
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unlisten",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "fee",
        type: "uint256",
      },
    ],
    name: "SetTurntableFee",
    type: "event",
  },
];

export class ITurntableKIP7Listeners__factory {
  static readonly abi = _abi;
  static createInterface(): ITurntableKIP7ListenersInterface {
    return new utils.Interface(_abi) as ITurntableKIP7ListenersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ITurntableKIP7Listeners {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ITurntableKIP7Listeners;
  }
}
